name: Build
on: [push]

jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm install -g @angular/cli
      - run: cd web && npm install
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: cd web && ng build --output-path ../pkg/web/dist
      - uses: actions/upload-artifact@v2
        with:
          name: autograder-web
          path: |
            pkg/web/dist
  build-server:
    runs-on: ubuntu-latest
    needs: build-web
    strategy:
      matrix:
        GOOS: [linux, windows]
        include:
          - GOOS: windows
            ext: .exe
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17'
      - uses: actions/download-artifact@v2
        with:
          name: autograder-web
      - run: GOOS=${{ matrix.GOOS }} go build -tags containers_image_openpgp -ldflags '-w -extldflags "-static"' -o autograder-server-${{ matrix.GOOS }}${{ matrix.ext }} cmd/autograder_server.go
      - run: GOOS=${{ matrix.GOOS }} go build -tags containers_image_openpgp -ldflags '-w -extldflags "-static"' -o db-seeder-${{ matrix.GOOS }}${{ matrix.ext }} cmd/db_seeder.go
      - uses: actions/upload-artifact@v2
        with:
          name: autograder-server-${{ matrix.GOOS }}
          path: |
            autograder-server-${{ matrix.GOOS }}${{ matrix.ext }}
            db-seeder-${{ matrix.GOOS }}${{ matrix.ext }}
