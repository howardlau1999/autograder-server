name: Build
on:
  - push
  - release:
      types: [ created ]

jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: cd web && git rev-parse HEAD | tee ../.web-version
      - uses: actions/cache@v3
        with:
          path: web/.angular
          key: autograder-angular-${{ hashFiles('.web-version') }}
          restore-keys: |
            autograder-angular-
      - uses: actions/cache@v3
        id: cache-web
        with:
          path: pkg/web/dist
          key: autograder-web-${{ hashFiles('.web-version') }}
      - if: steps.cache-web.outputs.cache-hit != 'true'
        run: npm install -g @angular/cli && cd web && npm install && npm install vcd-stream --ignore-scripts && ng build --output-path ../pkg/web/dist
      - run: zip -r autograder-web.zip pkg/web/dist
        if: steps.cache-web.outputs.cache-hit != 'true'
      - uses: appleboy/scp-action@master
        if: steps.cache-web.outputs.cache-hit != 'true' && github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
        with:
          host: ${{ secrets.ALIYUN_HOST }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          key: ${{ secrets.ALIYUN_PRIVATE_KEY }}
          passphrase: ${{ secrets.ALIYUN_PRIVATE_KEY_PASS }}
          source: autograder-web.zip
          target: autograder-web
          overwrite: true

  build-server:
    runs-on: ubuntu-latest
    needs: build-web
    strategy:
      matrix:
        GOOS: [linux, windows]
        GOARCH: [amd64, arm, arm64]
        include:
          - GOOS: windows
            ext: .exe
        exclude:
          - GOOS: windows
            GOARCH: arm
          - GOOS: windows
            GOARCH: arm64
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.20'
      - run: cd web && git rev-parse HEAD | tee ../.web-version
      - uses: actions/cache@v3
        with:
          path: pkg/web/dist
          key: autograder-web-${{ hashFiles('.web-version') }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ matrix.GOOS }}-${{ matrix.GOARCH }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ matrix.GOOS }}-${{ matrix.GOARCH }}-go-
      - run: CGO_ENABLED=0 GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -tags containers_image_openpgp -ldflags '-extldflags "-static"' -o autograder-server-${{ matrix.GOOS }}-${{ matrix.GOARCH }}${{ matrix.ext }} cmd/autograder_server.go
      - run: CGO_ENABLED=0 GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -tags containers_image_openpgp -ldflags '-extldflags "-static"' -o autograder-grader-${{ matrix.GOOS }}-${{ matrix.GOARCH }}${{ matrix.ext }} cmd/autograder_grader.go
      - run: tar zcvf autograder-server-${{ matrix.GOOS }}-${{ matrix.GOARCH }}.tar.gz autograder-server-${{ matrix.GOOS }}-${{ matrix.GOARCH }}${{ matrix.ext }} autograder-grader-${{ matrix.GOOS }}-${{ matrix.GOARCH }}${{ matrix.ext }}
      - uses: appleboy/scp-action@master
        if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
        with:
          host: ${{ secrets.ALIYUN_HOST }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          key: ${{ secrets.ALIYUN_PRIVATE_KEY }}
          passphrase: ${{ secrets.ALIYUN_PRIVATE_KEY_PASS }}
          source: autograder-server-${{ matrix.GOOS }}-${{ matrix.GOARCH }}.tar.gz
          target: autograder-server-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          overwrite: true
      - name: Upload release archive
        uses: actions/upload-release-asset@v1.0.2
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: autograder-server-${{ matrix.GOOS }}-${{ matrix.GOARCH }}.tar.gz
          asset_name: autograder-server-${{ matrix.GOOS }}-${{ matrix.GOARCH }}.tar.gz
          asset_content_type: application/octet-stream

